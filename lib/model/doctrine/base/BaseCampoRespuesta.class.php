<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('CampoRespuesta', 'doctrine');

/**
 * BaseCampoRespuesta
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $apartado_pregunta_id
 * @property string $tipo_dato
 * @property string $nombre
 * @property string $valor_defecto
 * @property integer $calculado
 * @property ApartadoPregunta $ApartadoPregunta
 * 
 * @method integer          getId()                   Returns the current record's "id" value
 * @method integer          getApartadoPreguntaId()   Returns the current record's "apartado_pregunta_id" value
 * @method string           getTipoDato()             Returns the current record's "tipo_dato" value
 * @method string           getNombre()               Returns the current record's "nombre" value
 * @method string           getValorDefecto()         Returns the current record's "valor_defecto" value
 * @method integer          getCalculado()            Returns the current record's "calculado" value
 * @method ApartadoPregunta getApartadoPregunta()     Returns the current record's "ApartadoPregunta" value
 * @method CampoRespuesta   setId()                   Sets the current record's "id" value
 * @method CampoRespuesta   setApartadoPreguntaId()   Sets the current record's "apartado_pregunta_id" value
 * @method CampoRespuesta   setTipoDato()             Sets the current record's "tipo_dato" value
 * @method CampoRespuesta   setNombre()               Sets the current record's "nombre" value
 * @method CampoRespuesta   setValorDefecto()         Sets the current record's "valor_defecto" value
 * @method CampoRespuesta   setCalculado()            Sets the current record's "calculado" value
 * @method CampoRespuesta   setApartadoPregunta()     Sets the current record's "ApartadoPregunta" value
 * 
 * @package    psicologia
 * @subpackage model
 * @author     Gustavo Lacoste <gustavo@lacosox.org>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCampoRespuesta extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('campo_respuesta');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('apartado_pregunta_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('tipo_dato', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('nombre', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('valor_defecto', 'string', 1000, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1000,
             ));
        $this->hasColumn('calculado', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('ApartadoPregunta', array(
             'local' => 'apartado_pregunta_id',
             'foreign' => 'id'));
    }
}