<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('ApartadoPregunta', 'doctrine');

/**
 * BaseApartadoPregunta
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $pregunta_seccion_id
 * @property integer $apartado_pregunta_id
 * @property string $nombre
 * @property string $titulo
 * @property string $descripcion
 * @property integer $unico
 * @property Doctrine_Collection $ApartadoPregunta
 * @property PreguntaSeccion $PreguntaSeccion
 * @property Doctrine_Collection $CampoRespuesta
 * 
 * @method integer             getId()                   Returns the current record's "id" value
 * @method integer             getPreguntaSeccionId()    Returns the current record's "pregunta_seccion_id" value
 * @method integer             getApartadoPreguntaId()   Returns the current record's "apartado_pregunta_id" value
 * @method string              getNombre()               Returns the current record's "nombre" value
 * @method string              getTitulo()               Returns the current record's "titulo" value
 * @method string              getDescripcion()          Returns the current record's "descripcion" value
 * @method integer             getUnico()                Returns the current record's "unico" value
 * @method Doctrine_Collection getApartadoPregunta()     Returns the current record's "ApartadoPregunta" collection
 * @method PreguntaSeccion     getPreguntaSeccion()      Returns the current record's "PreguntaSeccion" value
 * @method Doctrine_Collection getCampoRespuesta()       Returns the current record's "CampoRespuesta" collection
 * @method ApartadoPregunta    setId()                   Sets the current record's "id" value
 * @method ApartadoPregunta    setPreguntaSeccionId()    Sets the current record's "pregunta_seccion_id" value
 * @method ApartadoPregunta    setApartadoPreguntaId()   Sets the current record's "apartado_pregunta_id" value
 * @method ApartadoPregunta    setNombre()               Sets the current record's "nombre" value
 * @method ApartadoPregunta    setTitulo()               Sets the current record's "titulo" value
 * @method ApartadoPregunta    setDescripcion()          Sets the current record's "descripcion" value
 * @method ApartadoPregunta    setUnico()                Sets the current record's "unico" value
 * @method ApartadoPregunta    setApartadoPregunta()     Sets the current record's "ApartadoPregunta" collection
 * @method ApartadoPregunta    setPreguntaSeccion()      Sets the current record's "PreguntaSeccion" value
 * @method ApartadoPregunta    setCampoRespuesta()       Sets the current record's "CampoRespuesta" collection
 * 
 * @package    psicologia
 * @subpackage model
 * @author     Gustavo Lacoste <gustavo@lacosox.org>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseApartadoPregunta extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('apartado_pregunta');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('pregunta_seccion_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('apartado_pregunta_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('nombre', 'string', 140, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 140,
             ));
        $this->hasColumn('titulo', 'string', 140, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 140,
             ));
        $this->hasColumn('descripcion', 'string', 300, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 300,
             ));
        $this->hasColumn('unico', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('ApartadoPregunta', array(
             'local' => 'id',
             'foreign' => 'apartado_pregunta_id'));

        $this->hasOne('PreguntaSeccion', array(
             'local' => 'pregunta_seccion_id',
             'foreign' => 'id'));

        $this->hasMany('CampoRespuesta', array(
             'local' => 'id',
             'foreign' => 'apartado_pregunta_id'));
    }
}