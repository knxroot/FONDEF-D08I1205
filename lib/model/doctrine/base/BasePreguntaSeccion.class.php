<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('PreguntaSeccion', 'doctrine');

/**
 * BasePreguntaSeccion
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $nombre
 * @property string $enunciado
 * @property integer $seccion_id
 * @property SeccionInstrumento $SeccionInstrumento
 * @property Doctrine_Collection $ApartadoPregunta
 * 
 * @method integer             getId()                 Returns the current record's "id" value
 * @method string              getNombre()             Returns the current record's "nombre" value
 * @method string              getEnunciado()          Returns the current record's "enunciado" value
 * @method integer             getSeccionId()          Returns the current record's "seccion_id" value
 * @method SeccionInstrumento  getSeccionInstrumento() Returns the current record's "SeccionInstrumento" value
 * @method Doctrine_Collection getApartadoPregunta()   Returns the current record's "ApartadoPregunta" collection
 * @method PreguntaSeccion     setId()                 Sets the current record's "id" value
 * @method PreguntaSeccion     setNombre()             Sets the current record's "nombre" value
 * @method PreguntaSeccion     setEnunciado()          Sets the current record's "enunciado" value
 * @method PreguntaSeccion     setSeccionId()          Sets the current record's "seccion_id" value
 * @method PreguntaSeccion     setSeccionInstrumento() Sets the current record's "SeccionInstrumento" value
 * @method PreguntaSeccion     setApartadoPregunta()   Sets the current record's "ApartadoPregunta" collection
 * 
 * @package    psicologia
 * @subpackage model
 * @author     Gustavo Lacoste <gustavo@lacosox.org>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePreguntaSeccion extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('pregunta_seccion');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('nombre', 'string', 140, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 140,
             ));
        $this->hasColumn('enunciado', 'string', 300, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 300,
             ));
        $this->hasColumn('seccion_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('SeccionInstrumento', array(
             'local' => 'seccion_id',
             'foreign' => 'id'));

        $this->hasMany('ApartadoPregunta', array(
             'local' => 'id',
             'foreign' => 'pregunta_seccion_id'));
    }
}