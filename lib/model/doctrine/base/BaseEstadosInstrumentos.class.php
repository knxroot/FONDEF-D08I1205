<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('EstadosInstrumentos', 'doctrine');

/**
 * BaseEstadosInstrumentos
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id_reg_ins
 * @property integer $id_encuestado
 * @property string $sigla_instrumento
 * @property integer $id_user
 * @property string $estado
 * @property timestamp $fecha_inicio
 * @property timestamp $fecha_cierre
 * @property time $tiempo_total_utilizado
 * @property string $modalidad_respuesta
 * @property Encuestado $Encuestado
 * @property SfGuardUser $SfGuardUser
 * 
 * @method integer             getIdRegIns()               Returns the current record's "id_reg_ins" value
 * @method integer             getIdEncuestado()           Returns the current record's "id_encuestado" value
 * @method string              getSiglaInstrumento()       Returns the current record's "sigla_instrumento" value
 * @method integer             getIdUser()                 Returns the current record's "id_user" value
 * @method string              getEstado()                 Returns the current record's "estado" value
 * @method timestamp           getFechaInicio()            Returns the current record's "fecha_inicio" value
 * @method timestamp           getFechaCierre()            Returns the current record's "fecha_cierre" value
 * @method time                getTiempoTotalUtilizado()   Returns the current record's "tiempo_total_utilizado" value
 * @method string              getModalidadRespuesta()     Returns the current record's "modalidad_respuesta" value
 * @method Encuestado          getEncuestado()             Returns the current record's "Encuestado" value
 * @method SfGuardUser         getSfGuardUser()            Returns the current record's "SfGuardUser" value
 * @method EstadosInstrumentos setIdRegIns()               Sets the current record's "id_reg_ins" value
 * @method EstadosInstrumentos setIdEncuestado()           Sets the current record's "id_encuestado" value
 * @method EstadosInstrumentos setSiglaInstrumento()       Sets the current record's "sigla_instrumento" value
 * @method EstadosInstrumentos setIdUser()                 Sets the current record's "id_user" value
 * @method EstadosInstrumentos setEstado()                 Sets the current record's "estado" value
 * @method EstadosInstrumentos setFechaInicio()            Sets the current record's "fecha_inicio" value
 * @method EstadosInstrumentos setFechaCierre()            Sets the current record's "fecha_cierre" value
 * @method EstadosInstrumentos setTiempoTotalUtilizado()   Sets the current record's "tiempo_total_utilizado" value
 * @method EstadosInstrumentos setModalidadRespuesta()     Sets the current record's "modalidad_respuesta" value
 * @method EstadosInstrumentos setEncuestado()             Sets the current record's "Encuestado" value
 * @method EstadosInstrumentos setSfGuardUser()            Sets the current record's "SfGuardUser" value
 * 
 * @package    psicologia
 * @subpackage model
 * @author     Gustavo Lacoste <gustavo@lacosox.org>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseEstadosInstrumentos extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('estados_instrumentos');
        $this->hasColumn('id_reg_ins', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 8,
             ));
        $this->hasColumn('id_encuestado', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('sigla_instrumento', 'string', 10, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 10,
             ));
        $this->hasColumn('id_user', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('estado', 'string', 20, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('fecha_inicio', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('fecha_cierre', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('tiempo_total_utilizado', 'time', 25, array(
             'type' => 'time',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('modalidad_respuesta', 'string', 20, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 20,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Encuestado', array(
             'local' => 'id_encuestado',
             'foreign' => 'id_encuestado'));

        $this->hasOne('SfGuardUser', array(
             'local' => 'id_user',
             'foreign' => 'id'));
    }
}