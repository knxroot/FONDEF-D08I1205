% El informe de práctica de estudios debe presentarse 
% anillado en tapas transparentes, hojas TAMAÑO CARTA 
% y escrito en letra tamaño 12, times new roman,  a 
% espacio sencillo, y en tercera persona.

% La información escrita podrá complementarse con dibujos 
% y fotografías, tablas, gráficos, análisis matemático y 
% citas bibliográficas, en la medida discreta y propia 
% para la más fácil comprensión de la materia estudiada.


\documentclass[letterpaper,12pt,oneside]{report}

\usepackage[utf8]{inputenc}
\usepackage{graphicx}
\usepackage[right=2cm,left=3cm,top=2cm,bottom=2.2cm]{geometry}
\usepackage[font=footnotesize]{caption} 
\usepackage[spanish]{babel}
\usepackage{wrapfig}
\usepackage{fancyhdr}
\usepackage{subfig}
%\usepackage{hyperref}
\usepackage{moreverb}
\usepackage{listings}
\pagestyle{fancy}
\usepackage{amsmath, amsthm, amssymb}
\usepackage[only,mapsfrom,Mapsto,Mapsfrom]{stmaryrd} 



\usepackage{color}
%\RequirePackage{eurosym}
%\RequirePackage[style=long,cols=2,border=none,toc=true]{glossary}
%\RequirePackage{makeidx}
%\RequirePackage{supertabular}
\usepackage{listings}
% Definiendo colores para los listados de código fuente
\definecolor{violet}{rgb}{0.5,0,0.5}
\definecolor{navy}{rgb}{0,0,0.5}

%\definecolor{hellgelb}{rgb}{1,1,0.8}
\definecolor{verdeclaro}{RGB}{221,248,204}
\definecolor{plomo}{RGB}{238,238,238}
\definecolor{celeste}{RGB}{228,247,255}
\definecolor{colKeys}{rgb}{0,0,1}
\definecolor{colIdentifier}{rgb}{0,0,0}
\definecolor{colComments}{rgb}{1,0,0}
\definecolor{colString}{rgb}{0,0.5,0}

\lstset{
        float=hbp,
        basicstyle=\ttfamily\small,
        identifierstyle=\color{colIdentifier},
        keywordstyle=\color{colKeys},
        stringstyle=\color{colString},
        commentstyle=\color{colComments},
        columns=flexible,
        tabsize=4,
        frame=single,
        extendedchars=true,
        showspaces=false,
        showstringspaces=false,
        numbers=left,
        numberstyle=\tiny,
        breaklines=true,
        backgroundcolor=\color{verdeclaro},
        breakautoindent=true,
        captionpos=b
}

\newcommand{\codigofuente}[3]{%
  \lstinputlisting[language=#1,caption={#2}]{#3}%
}

%-------------Formato de títulos de capítulos -------------------------

% http://zoonek.free.fr/LaTeX/LaTeX_samples_chapter/0.html
% titulo #27

\makeatletter
\def\thickhrulefill{\leavevmode \leaders \hrule height 1ex \hfill \kern \z@}
\def\@makechapterhead#1{%
  \vspace*{10\p@}%
  {\parindent \z@ 
    {\raggedleft \reset@font
      \scshape \@chapapp{} \thechapter\par\nobreak}%
    \par\nobreak
    \vspace*{30\p@}
    \interlinepenalty\@M
    {\raggedright \Huge \scshape #1}%
    \par\nobreak
    \hrulefill
    \par\nobreak
    \vskip 30\p@
  }}
\def\@makeschapterhead#1{%
  \vspace*{10\p@}%
  {\parindent \z@ 
    {\raggedleft \reset@font
      \scshape \vphantom{\@chapapp{} \thechapter}\par\nobreak}%
    \par\nobreak
    \vspace*{30\p@}
    \interlinepenalty\@M
    {\raggedright \Huge \scshape  #1}%
    \par\nobreak
    \hrulefill
    \par\nobreak
    \vskip 30\p@
  }}


%fin titulo



%-------------Encabezado, pie de páginas y numeración-------------------------

% Cada hoja deberá tener un pie de página que indicará 
% el nombre de la empresa o institución donde se realizó 
% la práctica desplazado hacia la izquierda y un 
% encabezado en el cual se indicará en capítulo 
% correspondiente del informe, este último deberá estar 
% desplazado hacia la derecha. La letra y el tamaño 
% será el mismo que el usado en el pie de página 
% (negrita y cursiva).

% Todas las hojas que se encuentran a continuación de 
% los resúmenes irán numeradas en la parte inferior 
% derecha partiendo de página nº1. La letra será la 
% misma del informe tamaño 10 (negrita y cursiva).


% http://aristarco.dnsalias.org/node/21

\fancyhf{} % borrar todos los ajustes

% En lo siguiente, fancyhead sirve para configurar la cabecera, fancyfoot para el pie.
% Justificación: C=centered, R=right, L=left, (nada)=LRC
% Página: O=odd, E=even, (nada)=OE



\fancyhead[R]{\footnotesize \leftmark}
\fancyfoot[L]{\footnotesize \scshape CEIS-UFRO.}
\fancyfoot[R]{\small \thepage}
\renewcommand{\chaptermark}[1]{\markboth{\scshape #1}{}}



% aplicar estilo fancy al inicio de un capítulo
\fancypagestyle{plain}{
   \fancyhead{} % elimina cabeceras en páginas "plain"
   \renewcommand{\headrulewidth}{0pt} % así como la raya
} 



\begin{document}

% Portada -----------------------------------------------------------------------


\thispagestyle{empty} %quita la numeración de las paginas

%La primera hoja del informe, que constituirá la tapa irá en forma destacada y con los espacios suficientes para dar una buena presentación, los títulos serán los siguientes:
%Logo institucional (en color azul) centrado en la parte superior 
%Debajo, nombre de la Universidad, Facultad y Departamento 
%Informe de Práctica Profesional con su código (Práctica I, Código I86300 - Práctica II, Código I86400)
%Nombre de la industria, empresa o institución 
%Nombre del alumno, Nº de matrícula y carrera 


\begin{center}

%logo de la UFRO
\begin{figure}[h]
  \centering
    \includegraphics{images/logo_azul_318.jpg}
\end{figure}

UNIVERSIDAD DE LA FRONTERA\\
FACULTAD DE INGENIERÍA, CIENCIAS Y ADMINISTRACIÓN\\
DEPARTAMENTO DE INGENIERÍA DE SISTEMAS

\vskip 104pt %8 lineas de 13pt


\begin{center}
INFORME DE PRÁCTICA DE ESTUDIOS II\end{center}
\begin{center}
CÓDIGO I86400
\end{center}

\vskip 27pt


CEIS-UFRO\\
ÁREA DE DESARROLLO

%\end{center}


\vfill

%\begin{flushright}

NOMBRE DEL ALUMNO: GUSTAVO ANÍBAL LACOSTE ZÚÑIGA\\
\vskip 13pt
Nº DE MATRÍCULA: 15507962207\\
\vskip 13pt
CARRERA: INGENIERÍA INFORMÁTICA\\
\vskip 13pt
FECHA DE INICIO DE PRÁCTICA: 01/02/2010\\
FECHA DE TÉRMINO DE PRÁCTICA: 30/04/2010
%\end{flushright}

\end{center}

\vskip 63pt


% 2da y 3ra pagina -----------------------------------------------------------------

% La segunda y tercera hoja del informe será la fotocopia 
% simple del Formulario de Evaluación de Prácticas de 
% Estudios entregado por la empresa, estas hojas no tienen 
% encabezado, pie de página, ni numeración.



% 4ta pagina -----------------------------------------------------------------


% Sumario : Cada informe será precedido de un resumen sinóptico, en el cual se
% enunciarán las cuestiones esenciales estudiadas y las conclusiones
% importantes logradas. 
\newpage 
\chapter*{Sumario}


El objetivo del presente informe es documentar la experiencia adquirida durante el desarrollo de la práctica realizada en la empresa Lazos durante el periodo   Febrero  a finales de Abril  de 2010.
\newline


El objetivo de la práctica profesional II es desarrollar aplicaciones en el área tecnológica e informática bajo la tutela de un profesional especializado de la empresa. 
\newline

En el siguiente informe se divide principalmente en tres partes: 

\begin{enumerate}


\item En la primera parte se muestran  los objetivos generales y específicos de la práctica de estudios

\item En la segunda parte se da un contexto global de la situación en que se realizó la práctica, dando a conocer la empresa CEIS-UFRO y nacimiento apartir de la división de la empresa Lazos, la estructura organizacional de CEIS-UFRO, además de la  misión y visión de la empresa.

\item  En la tercera parte, el informe se centra en las actividades realizadas en el periodo
de práctica, describiendo las actividades más significativas realizadas y dando a conocer la 
apreciación de cada una de estas.

\end{enumerate}

\thispagestyle{empty} %oculta el numero de esta pagina

Además se describen las principales herramientas tecnológicas utilizadas en la práctica realizando  una pequeña crítica a algunas de estas.
\newline

Finalmente, se expresan las principales conclusiones obtenidas en el periodo de práctica.

% 5ta pagina -----------------------------------------------------------------


% La quinta hoja del informe será el índice con la indicación 
% de las páginas correspondientes. Los asuntos tratados se 
% enunciarán en un índice de títulos y subtítulos, esta hoja 
% no tiene encabezado, pie de página, ni numeración.


\tableofcontents %genera el indice
\thispagestyle{empty}


% 6ta pagina -----------------------------------------------------------------

% La sexta hoja en adelante del informe contendrá:

\chapter{Introducción y Objetivos}

\section{Introducción}

% \addcontentsline{toc}{chapter}{Introducción}

% Introducción : La introducción contendrá, primeramente, la explicación del 
% propósito y alcance del trabajo. A continuación se dará cuenta del estado del 
% asunto al tiempo de iniciarse el estudio, debiendo mencionarse las fuentes de
%  información consultadas para determinarlo, y consignar las noticias que 
% tenga el autor acerca de estudios efectuados anteriormente sobre la misma
%  materia. Cuando el informe se refiere a un trabajo experimental sobre un 
% asunto con fundamento teórico, la teoría básica se expondrá y desarrollará 
% en la introducción, o en una sección aparte si fuere necesario darle algún
%  desarrollo a causa de que el informe esté destinado a lectores no 
% familiarizados con el aspecto teórico en cuestión. 

Son varios los objetivos que se persiguen con el ejercicio de esta práctica de estudios, el más importante, la interacción Universidad--Empresa: Investigación y desarrollo de software, adquirir experiencia en el ámbito informático  además de tener contacto con las personas que intervienen directamente en la producción, y el conocimiento general de las organizaciones.
\newline

En el desarrollo de esta práctica profesional II se desarrollaron diferentes tareas relacionadas con investigaciones y desarrollo con el fin de experimentar con nuevas tecnologías en el desarrollo de software. Esto último se debe a que la empresa desea migrar progresivamente  su linea de desarrollo (actualmente basada en php) a desarrollo en Java. El desarrollo de esta práctica corresponde para la empresa en el desarrollo de una nueva linea de negocio ligada a la informática medica.
\newline

Específicamente en este caso el aporte realizado se basa en el desarrollo del lado servidor, es por esto que una de las primeras tareas a desarrollar es el conocimiento del contexto en si del proyecto y de las tecnologías a utilizar (J2EE, OpenMRS, el servidor de aplicaciones para j2ee Glassfish, el CMS en j2ee Liferay  y CentOS GNU/Linux).
\newline

Paralelamente a la implementación de los servicios del lado del servidor otras personas del equipo de desarrollo realizaban la construcción de módulos que posteriormente se montarían en el servidor de aplicaciones y que debían interactuar entre si. 
\newline

El punto fuerte de esta práctica se enfocó sobre la  investigación, prueba e implementación del servidor de aplicaciones Glassfish, Liferay y CentOS GNU/Linux.
\newline

Por medio de este informe, se dará a conocer el alcance del trabajo realizado, el  conocimiento y la experiencia adquirida en la empresa.


\setcounter{page}{1} % comenzar la cuenta de las paginas en 1

\pagebreak 
\section{Objetivos}


Dentro de los principales objetivos formalizados  al inicio de la práctica, caben mencionar los siguientes:

\subsection*{Objetivo general}

Investigar e implementar los servicios necesarios para operar y mantener el software OpenMRS de registro clínico según requerimientos de sistema de salud actualmente implementado bajo php. Lo anterior incluye todas las actividades necesarias a realizar por el lado de servidor.

\subsection*{Objetivos específicos}

\begin{enumerate}

  \item Investigación,implementación, performance, configuración de:
    \begin{enumerate}
      \item Servidor de aplicaciones J2EE Glassfish.
      \item Apicación J2EE OpenMRS.
      \item CMS J2EE Liferay.
      \item Aplicaciones bajo el estándar Portlets en el CMS en J2EE Liferay.
    \end{enumerate}

  \item Documentación sobre el proceso realizado.

\end{enumerate}


% cuerpo del informe----------------------------------------

\chapter{Caracterización de la empresa}
%\addcontentsline{toc}{chapter}{Caracterización de la empresa}

\section{Descripción global}
%\addcontentsline{toc}{subsection}{Descripción global}

\subsection{Tipo de empresa}

CEIS-UFRO\textit{ ``Centro de excelencia de Ingeniería de Software de la Universidad de la Frontera`` }, \emph{Los Troncos Nº 01214, Temuco.}

\vspace{0.5cm}

\begin{center}
\begin{tabular}{r | l}

Tipo de empresa & Privada\\
\\
Actividad & Desarrollo de software\\
\\
Legalidad & Unidad dependiente de fundación FUDEA\\
\\
Rubro & Desarrollo de proyectos tecnológicos\\


\end{tabular}
\end{center}


\subsection{Misión y objetivos}



\subsubsection*{Misión}

Mejorar la eficiencia y eficacia de los procesos de gestión y comunicación de las organizaciones, a través del desarrollo, operación y mantención de servicios de software Web, con fuerte orientación a la satisfacción del cliente.


\subsubsection*{Objetivos como organización}
%Objetivos como organización

\begin{itemize}
\item Diseño y construcción de soluciones innovadoras para el mejoramiento de la gestión.
\item Búsqueda de la satisfacción de nuestros clientes.
\item Mejorar la rentabilidad de nuestros proyectos.
\item Fortalecer nuestras capacidades en recursos humanos .
\item Ofrecer a todos los estudiantes, perteneciente a una carrera vinculada al área de la  Informática, Tecnología y Temática, la posibilidad de participar en proyectos de IT con aplicación en el "mundo real".
\end{itemize}


\newpage 
\section{Historia de la empresa}
%\addcontentsline{toc}{subsection}{Historia de la empresa}

Antes de conocer la historia de esta empresa es importante aclarar que esta deriva de la empresa Lazos, es por esto que observaremos primero una mirada a la historia de esta empresa  para luego relacionarla con CEIS-UFRO.
\newline

%---------LAZOS------------------
\begin{wrapfigure}{r}{4cm}
%centering
\includegraphics[width=5cm]{images/lazos.jpeg}
\caption{Logo de la empresa Lazos}
\label {fig:lazoslogo}
\vspace{0.5cm}
\end{wrapfigure}
Lazos  es una marca de la Fundación de Desarrollo Educacional La Araucanía (FUDEA), fundación de derecho privado, autónoma, con patrimonio propio, creada por la Universidad de La Frontera el 10 de octubre de 1983.
\newline

La misión de FUDEA es \textit{``Fomentar y contribuir con la Universidad de La Frontera de manera dinámica y flexible al desarrollo de las actividades de proyectos, capacitación,transferencia tecnológica y prestación de servicios, aumentando el vínculo con empresas públicas y privadas, con el fin de convertir a la Universidad en un agente del desarrollo de la Región de La Araucanía y del país''}.
\newline

Lazos nace en 1997, como respuesta a los altos requerimientos tecnológicos en servicios de conectividad y comunicaciones, en particular en la implantación y ejecución del proyecto Enlaces por parte del Instituto de Informática Educativa (IIE). Actualmente, la empresa ofrece diversos servicios WEB tales como:

\begin{itemize}
\item Mantención y operación de aplicaciones Web.
\item Servicios de software a través de Web.
\item Hospedaje de aplicaciones (Web hosting).
\item Asesorías en el diseño de redes y servicios de conectividad.
\end{itemize}

%---------CEISUFRO------------------
\begin{wrapfigure}{r}{4cm}
%centering
%Logo CentOS
\includegraphics[width=5cm]{images/ceis.jpg}
\caption{Logo de área desarrollo de empresa CEIS-UFRO}
\label {fig:ceisufrologo}
\vspace{0.5cm}
\end{wrapfigure}

Dado que la empresa Lazos fué incubada por la fundación Fudea de la  Universidad de la Frontera,
 parte de la estrategia original contemplaba que en un futuro esta empresa pasaría a ser autónoma. Esto último se llevó a cabo el año 2009 materializandose el año 2010 con la creación de la unidad CEIS-UFRO  unidad dependiente de la fundación FUDEA de  la Universidad de la Frontera y la separación de la unidad de negocios Lazos S.A como una empresa autónoma. 
\newline

CEIS-UFRO  nace entonces como una empresa de la Región de la Araucanía dedicada al desarrollo de productos de software y servicios web.  Su principal objetivo es mejorar continuamente para entregar productos y servicios de alta calidad, que se ajusten a los requerimientos y necesidades específicas de cada uno de sus clientes.

\newpage

\section{Estructura organizacional}

% Sistemas y sus unidades básicas. Funciones.
% 
% Tipo de organización de la empresa y sus sistemas. Organigrama y relaciones interfuncionales.
% 
% Generación en la toma de decisiones y secuencia o flujo de ellas.
% 
% Flujos de información en el interior de la empresa y en su medio externo.

\subsection*{Tipo de organización de la empresa}

El esquema organizacional de la empresa, está basado en el modelo de departamentalización por procesos, conformando las áreas de proyectos e integración y desarrollo. Este modelo de organización presenta entre sus características, la obtención de una ventaja económica y la utilización de habilidades especiales, sin embargo, produce cierta descordinación entre los sistemas \emph{(figura \ref{fig:organigrama}).}

\vspace{3cm}

\begin{figure}[h]
\centering
\includegraphics[width=16cm]{images/organigrama.png}
\caption{Organigrama de la empresa.}
\label {fig:organigrama}
\end{figure}




\chapter{Trabajo realizado por el alumno}
% \addcontentsline{toc}{chapter}{Trabajo realizado por el alumno}

\section{Descripción general}

Entre las principales tareas asignadas en el periodo de práctica, cabe destacar las siguientes:
\newline

\textbf{Investigación:} Una de las principales actividades de esta práctica profesional fue realizar investigaciones
sobre el servidor de aplicaciones Glassfish.
\newline

\textbf{Implementación: }El punto fuerte de esta práctica se basó en al implementación de los servicios necesarios para operar y mantener el software OpenMRS de registro clínico según requerimientos de sistema de salud actualmente implementado bajo php. Esto incluye todas las actividades necesarias a realizar por el lado de servidor.
\newline

\textbf{Documentación:} Se generaron documentos que con la finalidad de que en el futuro de  existir un cambio del encargado de operaciones la nueva persona acargo pueda tomar el control de forma rápida, además en caso de que se deba levantar nuevamente la implementación dicha documentación será la base para realizar esta tarea.
\newline

\newpage 
\section{Tecnologías involucradas}

Entre las tecnologías utilizadas en el transcurso de esta práctica se encuentran:
\newline
\newline

%---------CentOS------------------
\begin{wrapfigure}{r}{5cm}
%centering
%Logo CentOS
\includegraphics[width=5cm]{images/centos.jpg}
\caption{CentOS.}
\label {fig:centos}
\vspace{1cm}
\end{wrapfigure}
$ $ 
\vspace{-1.5cm}

\begin{description}
\item CentOS

(Community Enterprise Operating System) es la distribución libre del sistema operativo  Red Hat Enterprise Linux RHEL, compilado por voluntarios a partir del código fuente liberado por Red Hat. CentOS es una distribución enfocada a servidores pero también cuenta con su versión para escritorio. Esta distribución fué utilizada en esta práctica como un requisito impuesto por la empresa.\emph{(figura \ref{fig:centos}).}
\end{description}


%---------GlassFish------------------


\begin{wrapfigure}{r}{5cm}
%centering
%Logo Glassfish
\includegraphics[width=5cm]{images/glassfish_logo.png}
\caption{GlassFish.}
\label {fig:glassfish}

\end{wrapfigure}
$ $ 
\vspace{-0.5cm}
\newline

\begin{description}
\item GlassFish

GlassFish es un servidor de aplicaciones desarrollado por Sun Microsystems que implementa las tecnologías definidas en la plataforma Java2EE y permite ejecutar aplicaciones que siguen esta especificación. Es gratuito y de código libre, se distribuye bajo un licenciamiento dual a través de la licencia CDDL y la GNU GPL.\emph{(figura \ref{fig:glassfish}).}
\end{description}


%---------Liferay------------------

\begin{wrapfigure}{r}{5cm}
%centering
%Logo CentOS
\includegraphics[width=5cm]{images/liferay.jpg}
\caption{Liferay.}
\label {fig:liferay}
\vspace*{0.5cm}
\end{wrapfigure}
$ $ 
\vspace{-0.5cm}


\begin{description}
\item Liferay

Liferay es un portal de gestión de contenidos de código abierto escrito en Java que soporta el estándar portlet. Los portlet son componentes  de las interfaces de usuario las cuales pueden ser gestionadas, configuradas y visualizadas por un portal web, en este caso específico se utilizó Liferay. \emph{(figura \ref{fig:liferay}).}
\end{description}

%---------OpenMRS------------------
\begin{wrapfigure}{r}{5cm}
%centering
%Logo OpenMRS
\includegraphics[width=5cm]{images/openmrs.png}
\caption{OpenMRS.}
\label {fig:openmrs}
\vspace{1cm}
\end{wrapfigure}
$ $ 
\vspace{-0.5cm}

\begin{description}
\item OpenMRS

OpenMRS es una aplicación  bajo licencia GPL programada sobre el lenguaje Java que cumple diferentes funcionalidades de un sistema de registros médicos como: registro de pacientes, registro de especialistas, registro de encuentros entre paciente y especialista, generación de reportes, mantenedor de medicamentos y equipamiento en general.\emph{(figura \ref{fig:openmrs}).}
\end{description}
\newpage 

\section{Obteniendo e instalando JRE Y JDK en CentOS GNU/Linux}

A continuación se describirá el resultado de las tareas realizadas en esta práctica de estudios, se mostrará el proceso general realizado para montar los servicios que proveen la plataforma OpenMRS bajo el servidor de aplicaciones GlassFish.

\subsection{Sobre intérprete de Java Sun en CentOS GNU/Linux}

Es oportuno aclarar las particularidades que posee una instalación de java de sun bajo CentOS GNU/Linux. CentOS GNU/Linux 5 incluye la máquina virtual Java de GNU.org, equivalente a Java 1.4.2, junto con el sistema, la cual permite ejecutar programas escritos en Java a través del paquete java-1.4.2-gcj-compat-1.4.2.0-40jpp.112, disponible a través de los depósitos de equipamiento lógico (software) de estas distribuciones. 
\newline

La instalación de Java en forma correcta sobre el sistema CentOS GNU/Linux no es trivial, sin embargo se puede conseguir una instalación “funcional” para un entorno no profesional simplemente utilizando el paquete .bin al descargar java desde la web oficial de sun y luego apuntar la variable de entorno JAVA\_HOME al directorio /usr/java/jdk(num.versión).
\newline

Para conseguir una instalación correcta de Java se debe descargar el paquete oficial que ofrece sun para los sistemas genéricos GNU/Linux y luego descargar desde la web de jpackage y utilizar ambos ficheros para reconstruir el fichero rpm válido para la versión de CentOS GNU/Linux que se utilice. Como es lógico deberemos instalar también las herramientas que nos permitirán reconstruir los ficheros rpms.
\newline

Al finalizar el proceso obtendremos todos los rpms válidos necesarios para trabajar con la máquina virtual de sun bajo nuestro sistema CentOS GNU/Linux, vale decir: Java para desarrolladores, fuentes True Type básicas de sun, driver puente JDBC/ODBC, plugin para navegadores, archivos demostrativos y soporte para alsa, además los enlaces internos relacionados con java en CentOS GNU/Linux quedarán configurados de forma correcta, esta es la gran diferencia entre la opción fácil (descomprimir y apuntar) y la difícil (reconstruir rpms).
\newline

Por razones prácticas en el presente informe sólo se mostrará la forma fácil de realizar este proceso que es la que fué implementada en la empresa, sin embargo, durante el desarrollo de la práctica se geeró un instructivo completo que muestra la forma correcta de realizar la instalación del intérprete de Java bajo CentOS utilizando la técnica de reconstrucción de paquetes.
\newline
\newpage 

\subsection{Forma rápida: Descargar JDK, descomprimir y apuntar las variables}

\subsubsection*{Descargar JDK}


A continuación se explica la forma más fácil, la descripción de la forma avanzada fué documentada para la empresa. 
\newline

Ingresamos a la sección de JSE en el portal de java:

\begin{center}\textbf{http://java.sun.com/javase/downloads/index.jsp}\end{center}

%\href{http://java.sun.com/javase/downloads/index.jsp}{http://java.sun.com/javase/downloads/index.jsp}.


Vamos a la sección de JDK y seleccionamos download a la última versión disponible en este caso nos lleva a la URL: \begin{center}\textbf{http://java.sun.com/javase/downloads/widget/jdk6.jsp}\end{center}
%\href{http://java.sun.com/javase/downloads/widget/jdk6.jsp}{http://java.sun.com/javase/downloads/widget/jdk6.jsp}.
%\newline

Desde donde se selecciona una descarga para Linux y se descarga la versión .bin disponible (en este caso jdk-6u20-linux-i586.bin); creamos una carpeta y lo descargamos. Luego se ejecuta dicho fichero y una vez que hemos aceptado los términos de uso este generará una carpeta la cual contendrá el intérprete al cual posteriormente apuntaremos con las variables de entorno correspondientes.
\newline

El proceso a realizar se ejemplifica a continuación:

\lstset{language=sh}
\begin{lstlisting}
  root@localhost: # ./jdk-6u20-linux-i586.bin
  root@localhost: # ls 
  jdk1.6.0_20  jdk-6u20-linux-i586.bin  liferay-portal-glassfish-linux-5.2.3.jar  openmrs.war 
  root@localhost: # mv jdk-6u20-linux-i586/ /usr/java/
  root@localhost: nano /etc/profile.d/variablesjava.sh
\end{lstlisting}

Agregar al fichero /etc/profile.d/variablesjava.sh las siguientes líneas:
\lstset{language=sh}
\begin{lstlisting}
  #/etc/profile.d/variablesjava.sh
  export JAVA_HOME=/usr/java/jdk1.6.0_18
  export CLASSPATH=$JAVA_HOME/jre/lib/ext
  export PATH=$PATH:$JAVA_HOME/bin
\end{lstlisting}

Ahora que ya se tiene java instalado, sólo queda decirle a CentOS que utilice el java de sun por defecto para esto hacemos lo siguiente:
\lstset{language=sh}
\begin{lstlisting}
root@localhost: su - 
root@localhost: alternatives --config java
# elegir la alternativa de sun que hemos instalado y verificamos
root@localhost: java -version
\end{lstlisting}

%\codigofuente{Java}{Otro formato de código fuente}{src/Prueba.java}
\newpage 
\subsubsection*{Consideraciones finales}

Antes de dar por finalizada la instalación de JDK debemos editar el fichero \newline
/etc/yum.repos.d/jpackage.repo y cambiar enabled=1 a enabled=0  en los repositorios. Esto es necesario para no correr el riesgo de  que como consecuencia de una actualización, los nuevos paquetes de Java puedan ser instalados en la computadora sin  confirmación durante las actualizaciones que se ejecutan automáticamente por la noche (generalmente programadas por los administradores de los servidores y que tienen por finalidad evitar problemas de seguridad).

\section{Obteniendo e instalando Liferay con Glassfish integrado}

\subsection{Obtener Liferay con Glassfish}

Primero que todo se descarga Liferay desde el sitio oficial, seleccionar la versión que trae integrado Glassfish en este caso entrar a: 

\begin{center}\textbf{http://www.liferay.com/downloads}\end{center}

Ir a la sección de versión \textit{Community Edition}, seleccionamos Download Liferay Portal 5.2.3 CE y luego Bundled with Glassfish 2 for Linux, para este caso (versión 5.2.3) la descarga nos lleva a: 

\begin{center}\textbf{http://sourceforge.net/projects/lportal/files/Liferay\%20Portal/liferay-portal-glassfish-linux-5.2.3.jar}\end{center}

Utilizaremos esta URL para descargar Liferay. 

\lstset{language=sh}
\begin{lstlisting}
#Crear usuario glassfishLiferay y grupo para este usuario 
root@localhost: sudo groupadd glassfishLiferay 
root@localhost: sudo useradd -s /bin/bash -d /home/glassfishLiferay -m -g glassfishLiferay glassfish 
root@localhost: sudo passwd glassfishLiferay 
root@localhost: sudo -i -u  glassfishLiferay
root@localhost: curl -L -O 'http://sourceforge.net/projects/lportal/files/Liferay%20Portal/liferay-portal-glassfish-linux-5.2.3.jar' 
\end{lstlisting}

Ahora descargaremos el fichero que se encarga de crear la base de datos por defecto en Liferay bajo mysql para eso vamos a http://www.liferay.com/downloads/liferay-portal/additional-files
Desde la sección “Application Server Plugins - Database Scripts” -> Liferay Portal 5.2.3 SQL Scripts 

\lstset{language=sh}
\begin{lstlisting}
root@localhost: curl -L -O 'http://downloads.sourceforge.net/project/lportal/Liferay%20Portal/5.2.3/liferay-portal-sql-5.2.3.zip?use_mirror=ufpr'
root@localhost: sudo -i -u  glassfishLiferay
root@localhost: unzip -e liferay-portal-sql-5.2.3.zip\?use_mirror\=ufpr
root@localhost: mv liferay-portal-sql-5.2.3 /home/glassfish/
\end{lstlisting}


\subsection{Descomprimir e instalar Liferay con Glassfish}

A continuación se muestra el proceso en forma general:

\lstset{language=sh}
\begin{lstlisting}
#-----------------------------------------------------------
# Definicion de variables , no existen valores por defecto  / 
#----------------------------------------------------------
root@localhost: export INS_D=/home/glassfish/LiferayPortal 
root@localhost: export  LF_PORTAL_JAR_INS=/home/glassfish/liferay-portal-glassfish-linux-5.2.3.jar 
root@localhost: export  JDBC_CONECTOR=jdbc/LiferayPool 
root@localhost: export  MYSQL_SQL=/home/glassfish/liferay-portal-sql-5.2.3/create-minimal/create-minimal-mysql.sql 
#---------------------------- 
# Descomprime Ficheros      / 
#-------------------------- 
root@localhost:  cp $LF_PORTAL_JAR_INS $INS_D 
root@localhost:  cd $INS_D 
root@localhost:  java -Xmx512m -jar $LF_PORTAL_JAR_INS 
root@localhost:  chmod +x $INS_D/glassfish/lib/ant/bin/ant 
root@localhost:  $INS_D/glassfish/lib/ant/bin/ant -f $INS_D/glassfish/setup.xml 
root@localhost:  rm $INS_D/*.jar #borra el archivo desde donde descomprimimos  Liferay
\end{lstlisting}

\subsection{Configurar  Liferay con  MYSQL}

A continuación se configura JDBC en Liferay (previamente definidas las variables del script anterior). Primero que todo se descarga e integra la librería de mysql JConnector en Liferay:

\lstset{language=sh}
\begin{lstlisting}
#----------------------------- 
#Cofigurar JDBC en Liferay  / 
#--------------------------- 
# Agregar librerias JDBC - http://dev.mysql.com/downloads/connector/j/ 

root@localhost: cd /tmp 
root@localhost: wget http://mirrors.ucr.ac.cr/MySQL/Downloads/Connector-J/mysql-connector-java-5.1.12.tar.gz 
root@localhost: tar -xvzf mysql-connector-java-5.1.12.tar.gz 
root@localhost: cp mysql-connector-java-5.1.12/mysql-connector-java-5.1.12-bin.jar $INS_D/glassfish/lib/ 

\end{lstlisting}

Luego se configurar Liferay  para que pueda utilizar estas librerías utilizando para ello los valores de variables definidos inicialmente:

\lstset{language=sh}
\begin{lstlisting}
root@localhost: echo "jdbc.default.jndi.name=$JDBC_CONECTOR" > $INS_D/glassfish/domains/domain1/lib/classes/portal-ext.properties 
#creamos la BD, XXX= clave user root mysql, esto carga el fichero y crea la bd.
root@localhost: mysql -u root -pXXX< $MYSQL_SQL
\end{lstlisting}

El  comando anterior creó una base de datos llamada \textbf{lportal} ahora se crea un usuario con el mismo nombre y se asignan todos los permisos a dicha base de datos (el significado de '***' es la clave de usuario lportal en MySQL).

\lstset{language=sh}
\begin{lstlisting}
root@localhost: mysql -u root -pXXX
\end{lstlisting}

\lstset{language=SQL}
\begin{lstlisting}
CREATE USER 'lportal'@'localhost' IDENTIFIED BY '***';

GRANT USAGE ON * . * TO 'lportal'@'localhost' IDENTIFIED BY '***' WITH #MAX_QUERIES_PER_HOUR 0 MAX_CONNECTIONS_PER_HOUR 0 MAX_UPDATES_PER_HOUR 0 #MAX_USER_CONNECTIONS 0 ;

GRANT ALL PRIVILEGES ON `lportal\_%` . * TO 'lportal'@'localhost';
\end{lstlisting}





Se definen las variables que tendrá la política en Glassfish que será creada y su conector, esto se define con los datos son los creados anteriormente:
\lstset{language=sh}
\begin{lstlisting}
#----------------------------- 
#Crea JDBC pools GlassFish  / 
#---------------------------- 
root@localhost:  export BD_NAME=lportal
root@localhost:  export BD_USER=lportal
root@localhost:  export BD_PASS=******
root@localhost:  export BD_PORT=3306
root@localhost:  export SERVER_NAME=localhost
root@localhost:  export SERVER_SSL=false
root@localhost:  export USER_LOGINTIMEOUT=60
root@localhost:  export SERVER_PTHRESHOLD=0
root@localhost:  export JDBC_CONECT_POOL_NAME=LiferayPool
root@localhost:  export JDBC_RESOURCE=jdbc/Liferay
\end{lstlisting}


Se arranca glassfish para poder utilizar su administrador modo comando :
\lstset{language=sh}
\begin{lstlisting}
root@localhost: $INS_D/glassfish/bin/asadmin start-domain 
\end{lstlisting}

Ahora se crea el JDBC Connection Pools y el recurso JDBC utilizando el administrador modo comandos de GlassFish:
\lstset{language=sh}
\begin{lstlisting}
root@localhost: $INS_D/glassfish/bin/asadmin create-jdbc-connection-pool --datasourceclassname com.mysql.jdbc.jdbc2.optional.MysqlDataSource --restype javax.sql.DataSource --property DatabaseName=$BD_NAME:user=$BD_USER:password=$BD_PASS:PortNumber=$BD_PORT:ServerName=$SERVER_NAME:Ssl=$SERVER_SSL:LoginTimeout=$USER_LOGINTIMEOUT:PrepareThreshold=$SERVER_PTHRESHOLD $JDBC_CONECT_POOL_NAME

#Crea recurso JDBC
root@localhost: $INS_D/glassfish/bin/asadmin create-jdbc-resource --connectionpoolid  $JDBC_CONECT_POOL_NAME --enabled=true $JDBC_RESOURCE
\end{lstlisting}

\subsection{Eliminar datos de prueba de Liferay}

Básicamente lo que hay que hacer según  \footnote{http://www.liferay.com/web/guest/community/wiki/-/wiki/Main/7Cogs\%20sample\%20data} la propia comunidad de Liferay es borrar desde el directorio del contenedor web (tomcats o Glassfish)  la aplicación sevencogs-hook.war luego al entrar a Liferay nuevamente nos pedirá aceptar los Términos de uso, y reiniciar para verificar. Una alternativa es hacer undeploy a la aplicación desde la interfaz de administración de Glassfish o mediante línea de comandos como se muestra a continuación:

\lstset{language=sh}
\begin{lstlisting}
#----------------------------- 
#Quitando los datos de prueba / 
#---------------------------- 

# con el servidor en funcionamiento con los datos de prueba se realiza un undeploy a las siguientes aplicaciones

root@localhost: $INS_D/glassfish/bin/asadmin undeploy sevencogs-hook 
root@localhost: $INS_D/glassfish/bin/asadmin undeploy wol-portlet 
root@localhost: $INS_D/glassfish/bin/asadmin undeploy sevencogs-theme 
root@localhost: $INS_D/glassfish/bin/asadmin stop-domain 

#Como un precausion si aun se utilizaba hipersonic se realiza lo siguiente
root@localhost: mv $INS_D/data/hsql/lportal.properties /tmp/ 
root@localhost: mv $INS_D/data/hsql/lportal.script /tmp/
\end{lstlisting}



\subsection{Agregar librerías Struts y  ajustar arranque en el sistema}

Las librerías Struts son necesarias para soportar las aplicaciones desarrolladas por el equipo de construcción  bajo el patrón MVC y bajo la plataforma J2EE ya que estas han sido utilzadas como un framework base para la construcción de las aplicaciones. A continuación se muestra la forma de implementar estas librerías para ser utilziadas en timpo de ejecución por el lado del servidor.

Agregando  librería Struts: 
\lstset{language=sh}
\begin{lstlisting}
root@localhost: wget -b http://apache.freeby.pctools.cl/struts/library/struts-2.1.8.1-lib.zip [^]
root@localhost: unzip struts-2.1.8.1-lib.zip
root@localhost: cp struts-2.1.8.1-lib/*.jar /usr/lib/jvm/java-6-sun/lib
root@localhost: tree struts-2.1.8.1-lib >> estructura_struts-2.1.8.1-lib.txt
root@localhost: rm -rf struts-2.1.8.1-lib/ 
\end{lstlisting}

\newpage 

Para el arranque automático del servicio GlassFish se diseñó el siguiente script el cual se fija en el servidor como un script autoarrancable:

\codigofuente{sh}{Fichero: /etc/init.d/glassfish.sh}{src/glassfish.sh}
%\codigofuente{Java}{Otro formato de código fuente}{src/Prueba.java}

\newpage 
Se utiliza chkconfig para indicar que el servicio arrancará al inicio.

\lstset{language=sh}
\begin{lstlisting}
root@localhost: chmod +x /etc/init.d/glassfish.sh
root@localhost: chkconfig --add glassfish.sh
root@localhost: chkconfig --level 3 glassfish.sh on
root@localhost: /etc/init.d/glassfish.sh start
\end{lstlisting}

\section{Obteniendo e instalando OpenMRS}

\subsection{Obtener OpenMRS}

Se ingresa al sitio de descarga de OpenMRS:
\begin{center}\textbf{http://openmrs.org/wiki/Downloads}\end{center}

En la sección \textit{Official Releases} seleccionamos el fichero openmrs.war correspondiente a la última versión disponible para este caso esta corresponde a la versión 1.6.1.
\newline

Esto nos llevará a la siguiente URL en la cual debemos aceptar la licencia de OpenMRS antes de descargar.Utilziando esta URL realizamos la descarga.
\newline

\lstset{language=sh}
\begin{lstlisting}
root@localhost:  wget -b http://resources.openmrs.org/builds/releases/OpenMRS_1.6.1/openmrs.war
\end{lstlisting}

\subsection{Agregar como aplicación a GlassFish}

Se ingresa  al panel de administración de GlassFish en http://miserver.lazos.cl:4848/  \emph{(figura \ref{fig:panelglassfish})}.\newline

\begin{figure}
 \centering
 \includegraphics[width=15cm]{./images/panelglassfish.png}
 % panelglassfish.png: 1024x768 pixel, 72dpi, 36.12x27.09 cm, bb=0 0 1024 768
 \caption{Vista del ingreso al panel de administración de GlassFish}
 \label{fig:panelglassfish}
\end{figure}


Luego utilizando el nombre y password de usuario admin se ingresa  a Applications, Web Applications y click  en deploy. \emph{(figura \ref{fig:deployglassfish})}.\newline

\begin{figure}
 \centering
 \includegraphics[width=15cm]{./images/deployglassfish.png}
 % deployglassfish.png: 796x436 pixel, 72dpi, 28.08x15.38 cm, bb=0 0 796 436
 \caption{Vista del panel de administración en la pantalla deploy de GlassFish}
 \label{fig:deployglassfish}
\end{figure}

Se selecciona el fichero que contiene OpenMRS y se sube al servidor \emph{(figura \ref{fig:deployopenmrscontexto})}, en este momento existe la posibilidad de modificar el nombre y el contexto de la aplicación. Esto último hace referencia al nombre de la URL bajo el cual funcionará la aplicación OpenMRS que se ha instalado  y el contexto sobre el cual correrá. Si se desea agregar más de 1 OpenMRS al mismo dominio entonces este nombre y contexto deben ser modificados  antes de continuar.\newline


\begin{figure}
 \centering
 \includegraphics[width=15cm]{./images/deploypopenmrs.png}
 % deploypopenmrs.png: 916x491 pixel, 72dpi, 32.31x17.32 cm, bb=0 0 916 491
 \caption{Vista del panel de administración momentos antes de hacer deploy de la aplicación OpenMRS}
 \label{fig:deployopenmrscontexto}
\end{figure}

Se puede verificar que el deploy se realizó correctamente observando el log del proceso.

\newpage 
\subsection{Configurar OpenMRS con MySQL}

Se realiza una conexión a mysql con usuario root desde terminal:

\lstset{language=sh}
\begin{lstlisting}
root@localhost: Mysql -u root -p
\end{lstlisting}

Se crea una base de datos y usuario asociado asignando todos los privilegios.


\lstset{language=SQL}
\begin{lstlisting}
CREATE USER 'MINUEVOOPENMRS'@'localhost' IDENTIFIED BY '***';

GRANT USAGE ON * . * TO 'MINUEVOOPENMRS'@'localhost' IDENTIFIED BY '***' WITH MAX_QUERIES_PER_HOUR 0 MAX_CONNECTIONS_PER_HOUR 0 MAX_UPDATES_PER_HOUR 0 MAX_USER_CONNECTIONS 0 ;

CREATE DATABASE IF NOT EXISTS `MINUEVOOPENMRS` ;

GRANT ALL PRIVILEGES ON `MINUEVOOPENMRS` . * TO 'MINUEVOOPENMRS'@'localhost';
\end{lstlisting}

Entrar por el navegador a la dirección http://miserver.lazos.cl:8080/openmrs y seguir los  pasos para la configuración.

\begin{itemize}
 \item Paso 1: Configuración de la base de datos: Se debe seleccionar la opción ``NO`` y proporcionar datos de usuario y contraseña de MySQL.

  \item Paso 2: Las primeras dos opciones en “SI” luego proporcionar usuario y contraseña de MySQL.

  \item Paso 3: Dejar las opciones por defecto y continuar

  \item Paso 4: Configurar una contraseña para administración, debe contener números y letras mayúsculas y minúsculas.

  \item Paso 5: Configurar una implementación y continuar

  \item Paso 6: Presionar Finish y esperar.
\end{itemize}


Con esto  OpenMRS queda configurado y listo para trabajar.

\subsection{Ingresando a OpenMRS}

Ingresamos desde el navegador a la URL: http://miserver.lazos.cl:8080/openmrs y luego ingresamos usuario y password configurados en la instalación. El navegador muestra la pantalla de la \emph{(figura \ref{fig:pantallainicialopenmrs})}.

\begin{figure}
 \centering
 \includegraphics[width=15cm]{./images/openmrs_pantallainicial.png}
 % openmrs_pantallainicial.png: 1280x800 pixel, 72dpi, 45.16x28.22 cm, bb=0 0 1280 800
 \caption{Vista de la pantalla de ingreso de OpenMRS}
 \label{fig:pantallainicialopenmrs}
\end{figure}




\chapter{Conclusiones}
% \addcontentsline{toc}{chapter}{Conclusiones}

La práctica de estudios II inserta al estudiante universitario directamente en el mundo laboral, realizando tareas de producción con proyectos reales, donde poco sirve la teoría adquirida dentro de la universidad.
\newline

El trato con el personal, entre compañeros de trabajo se transforma en una valiosa experiencia para el alumno, mejorando notablemente la eficacia de su comunicación con los diferentes niveles jerárquicos.
\newline

Las labores realizadas por el alumno muestran el nivel de responsabilidad puesto en sus manos, la asignación de tareas que tienen implicancia directa sobre el producto que la empresa genera representa un desafió que es posible cumplirlo en la medida que el alumno sea capaz de evaluar sus propios límites y el de su equipo.
\newline

Mediante la investigación y aplicación de nuevas tecnologías se logra obtener un conocimiento importante para el desarrollo futuro del alumno.
\newline

La evaluación de los tiempos necesarios para completar las tareas no es trivial y se puede mejorar en la medida en que el alumno genere experiencia laboral.
\newline

El conocimiento de los procesos productivos reside en los empleados y su gestión resulta compleja. La generación de un centro documental de los procesos ayuda al traspaso del conocimiento sin embargo no es posible gestionarlo en su totalidad.
\newline

La ventaja competitiva de una empresa informática en general  se basa en la capacidad para gestionar el conocimiento existente en los empleados acerca de cada proceso productivo.



\chapter{Bibliografía no referenciada }
% \addcontentsline{toc}{chapter}{Bibliografía}

\begin{itemize}


% La citación corta se ubica después de la sentencia o sección seguida del año de publicación y el número de página cuando se considere apropiado. Algunos ejemplos:
% 
%     * (Smith, 2005)
%     * (Smith, 2005, p.1) o (Smith 2005:1)
% 
% Luego en la sección de bibliografía, la cita completa se escribe como a continuación:
% 
% Smith, John. (2005). Playing nicely together. St. Petersburg, FL (USA): Wikimedia Foundation.
%
% Si no está el año, poner n.d. (no date)
% Si no está el autor, comenzar con el nombre del artículo.

\item Sun Microsystems Inc. (2009). Sun GlassFish Enterprise Server v3 Prelude Administration Guide.

\item Sun Microsystems Inc. (Enero 2010).  Sun GlassFish Enterprise Server v3 Application Deployment Guide.

\item Sun Microsystems Inc. (Diciembre 2009). Sun GlassFish Enterprise Server v3 Reference Manual.


\item Sezov Richard , Jr.(2009). Liferay Portal Administrator's Guide, Third Edition.

\item  Schuld Chris, Installing Sun Java on CentOS 5.2 . Consultado el 26 de febrero de 2010,
 http://chrisschuld.com/2008/10/installing-sun-java-on-centos-5-2/ 

\item  Timme Falko, The Perfect Server. Consultado el 30 de febrero de 2010, \newline
http://www.howtoforge.com/perfect-server-centos-5.3-x86\_64-ispconfig-3-p6 .

\item  Kalali Masoud, Simply backup and restore your domains in GlassFish Using GlassFish Command Console. Consultado el 01 de Abril de 2010, \newline
http://weblogs.java.net/blog/2006/04/25/simply-backup-and-restore-your-domains-glassfish-using-glassfish-command-console .

\end{itemize}



\end{document}
